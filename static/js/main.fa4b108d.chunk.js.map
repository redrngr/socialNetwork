{"version":3,"sources":["api.ts","redux/redusers/list-reducer.ts","redux/redusers/profile-reducer.ts","redux/redusers/common-reducer.ts","redux/store.ts","assets/images/avatarHolder.png","components/Profile.tsx","components/List/Card.tsx","components/Loader.tsx","components/List/ListForm.tsx","components/List/Paginator.tsx","components/List/List.tsx","components/Navbar/DropMenu.tsx","assets/images/logo.svg","components/Navbar/Nav.tsx","components/Welcome.tsx","assets/images/logo_black.svg","components/Login.tsx","components/App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","headers","responseType","all","currentPage","pageSize","term","get","params","page","count","then","response","data","profile","id","initialState","employees","inProgress","totalUsersCount","filter","actions","type","list","state","action","userId","lookingForAJob","lookingForAJobDescription","fullName","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","photos","small","large","isAuth","setAuth","dispatch","common","store","createStore","combineReducers","applyMiddleware","thunk","window","connector","connect","getProfile","api","catch","error","console","log","props","Number","match","useEffect","useState","editMode","setEditMode","className","style","width","src","pic","alt","htmlFor","value","disabled","readOnly","onClick","Card","height","fontSize","name","status","to","Loader","role","message","ListForm","setTerm","onReset","handleSearch","aria-label","placeholder","onChange","event","target","Paginator","totalCount","portionSize","handleClick","pageCount","Math","ceil","pageArray","Array","fill","map","el","i","portionCount","portionNumber","setPortionNumber","leftLimit","rightLimit","stopPropagation","getEmployees","items","text","fn","interval","timer","args","clearTimeout","setTimeout","apply","debounce","length","DropMenu","onOutside","wrapperRef","document","addEventListener","handleClickOutside","removeEventListener","contains","aria-labelledby","position","inset","margin","transform","data-popper-placement","ref","node","e","preventDefault","showDrop","setShowDrop","logo","aria-current","activeClassName","data-bs-toggle","aria-expanded","Welcome","paddingTop","email","password","authData","setAuthData","Login","history","push","onSubmit","exact","path","component","List","Profile","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.fa4b108d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n  headers: {\r\n    'API-KEY': 'b5ca5d77-73a2-4e1d-9d41-4093195e078c'\r\n  },\r\n  responseType: 'json',\r\n});\r\n\r\n\r\nconst Employees = {\r\n  all: (currentPage: number, pageSize: number, term: string) => instance.get('/users', {\r\n    params: {\r\n      page: currentPage,\r\n      count: pageSize,\r\n      term: term\r\n    }\r\n  }).then(response => response.data),\r\n  profile: (id: number) => instance.get(`/profile/${id}`).then(response => response.data)\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { Employees };","import api from '../../api';\r\nimport { EmployeeType } from \"../../types\";\r\nimport { AppDispatchType, InferActionsTypes } from \"../store\";\r\n\r\nconst initialState = {\r\n  employees: [] as EmployeeType[],\r\n  inProgress: false,\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  filter: {\r\n    term: ''\r\n  }\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst list = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'LIST_PAGE_LOADED':\r\n      return {\r\n        ...state,\r\n        employees: action.employees\r\n      };\r\n    case 'ASYNC_TOGGLE':\r\n      return {\r\n        ...state,\r\n        inProgress: action.inProgress\r\n      };\r\n    case 'SET_TOTAL_USERS_COUNT':\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount\r\n      };\r\n    case 'SET_CURRENT_PAGE':\r\n      return {\r\n        ...state,\r\n        currentPage: action.page\r\n      };\r\n    case 'SET_FILTER':\r\n      return {\r\n        ...state,\r\n        filter: { term: action.term }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n  loadAC: (employees: Array<EmployeeType>) => ({ type: 'LIST_PAGE_LOADED', employees } as const),\r\n  asyncAC: (inProgress: boolean) => ({ type: 'ASYNC_TOGGLE', inProgress } as const),\r\n  setTotalUsersCountAC: (totalUsersCount: number) => ({ type: 'SET_TOTAL_USERS_COUNT', totalUsersCount } as const),\r\n  setCurrentPageAC: (page: number) => ({ type: 'SET_CURRENT_PAGE', page } as const),\r\n  setFilterAC: (term: string) => ({ type: 'SET_FILTER', term } as const)\r\n}\r\n\r\nexport const getEmployees = (page: number, pageSize: number, term: string) => (dispatch: AppDispatchType) => {\r\n  dispatch(actions.asyncAC(true))\r\n  api.Employees.all(page, pageSize, term)\r\n    .then(data => {\r\n      dispatch(actions.asyncAC(false))\r\n      dispatch(actions.loadAC(data.items))\r\n      dispatch(actions.setTotalUsersCountAC(data.totalCount))\r\n    })\r\n    .catch(error => {\r\n      dispatch(actions.asyncAC(false))\r\n      console.log(error)\r\n    });\r\n  dispatch(actions.setCurrentPageAC(page))\r\n  dispatch(actions.setFilterAC(term))\r\n}\r\n\r\nexport default list;\r\n\r\n\r\n","import api from '../../api';\r\nimport { ProfileType } from \"../../types\";\r\nimport { AppDispatchType, InferActionsTypes } from \"../store\";\r\n\r\nconst initialState = {\r\n  profile: {\r\n    userId: 0,\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: '',\r\n    fullName: '',\r\n    contacts: {\r\n      github: '',\r\n      vk: '',\r\n      facebook: '',\r\n      instagram: '',\r\n      twitter: '',\r\n      website: '',\r\n      youtube: '',\r\n      mainLink: ''\r\n    },\r\n    photos: {\r\n      small: '',\r\n      large: ''\r\n    }\r\n  } as ProfileType,\r\n  inProgress: false\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst list = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'PROFILE_PAGE_LOADED':\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      };\r\n    case 'ASYNC_TOGGLE':\r\n      return {\r\n        ...state,\r\n        inProgress: action.inProgress\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n  loadAC: (profile: ProfileType) => ({ type: 'PROFILE_PAGE_LOADED', profile } as const),\r\n  asyncAC: (inProgress: boolean) => ({ type: 'ASYNC_TOGGLE', inProgress } as const),\r\n}\r\n\r\nexport const getProfile = (id: number) => (dispatch: AppDispatchType) => {\r\n  dispatch(actions.asyncAC(true))\r\n  api.Employees.profile(id)\r\n    .then(data => {\r\n      dispatch(actions.asyncAC(false))\r\n      dispatch(actions.loadAC(data))\r\n    })\r\n    .catch(error => {\r\n      dispatch(actions.asyncAC(false))\r\n      console.log(error)\r\n    });\r\n}\r\n\r\nexport default list;\r\n\r\n\r\n","import { AppDispatchType, InferActionsTypes } from \"../store\";\r\n\r\nconst initialState = {\r\n  isAuth: false\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst common = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'SET_AUTH':\r\n      return {\r\n        ...state,\r\n        isAuth: action.isAuth\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n  setAuthAC: (isAuth: boolean) => ({ type: 'SET_AUTH', isAuth } as const)\r\n}\r\n\r\nexport const setAuth = (isAuth: boolean) => (dispatch: AppDispatchType) => {\r\n  dispatch(actions.setAuthAC(isAuth))\r\n}\r\n\r\nexport default common;\r\n\r\n\r\n","import { applyMiddleware, combineReducers, createStore } from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk';\r\nimport list from './redusers/list-reducer'\r\nimport profile from './redusers/profile-reducer'\r\nimport common from './redusers/common-reducer'\r\n\r\nexport const store = createStore(combineReducers({ list, profile, common }), applyMiddleware(thunk))\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\nexport type RootStateType = ReturnType<typeof store.getState>\r\nexport type AppDispatchType = typeof store.dispatch\r\n\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>\r\n","export default __webpack_public_path__ + \"static/media/avatarHolder.14a17919.png\";","import React, { useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport pic from '../assets/images/avatarHolder.png'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { RootStateType } from '../redux/store'\r\nimport { useEffect } from 'react';\r\nimport { getProfile } from '../redux/redusers/profile-reducer';\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n  profile: state.profile.profile\r\n})\r\n\r\ntype PropsType = PropsFromRedux & RouteComponentProps<{ id: string }>\r\n\r\nconst Profile: React.FC<PropsType> = ({ profile, ...props }) => {\r\n\r\n  let id: number = Number(props.match.params.id)\r\n\r\n  useEffect(() => {\r\n    props.getProfile(id)\r\n  }, [id])\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const handleToggle = () => {\r\n    setEditMode(!editMode)\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex mb-5 p-3\" style={{ width: \"100%\" }}>\r\n      <div className=\"d-flex flex-column\">\r\n        <img className=\"card-img-top\" src={profile.photos.large || pic} alt=\"Pic\" />\r\n      </div>\r\n      <div className=\"ms-3\">\r\n        <form className=\"row g-3\">\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"name\" value={profile.fullName} disabled={!editMode} readOnly={!editMode} />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"github\" className=\"form-label\">GITHUB</label>\r\n            <input type=\"tel\" className=\"form-control\" id=\"github\" value={profile.contacts.github} disabled={!editMode} readOnly={!editMode} />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"vk\" className=\"form-label\">VK</label>\r\n            <input type=\"email\" className=\"form-control\" id=\"vk\" value={profile.contacts.vk} disabled={!editMode} readOnly={!editMode} />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"facebook\" className=\"form-label\">FACEBOOK</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"facebook\" value={profile.contacts.facebook} disabled={!editMode} readOnly={!editMode} />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"instagram\" className=\"form-label\">INSTAGRAM</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"instagram\" value={profile.contacts.instagram} disabled={!editMode} readOnly={!editMode} />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"twitter\" className=\"form-label\">TWITTER</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"twitter\" value={profile.contacts.twitter} disabled={!editMode} readOnly={!editMode} />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"website\" className=\"form-label\">WEBSITE</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"website\" value={profile.contacts.website} disabled={!editMode} readOnly={!editMode} />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"youtube\" className=\"form-label\">YOUTUBE</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"youtube\" value={profile.contacts.youtube} disabled={!editMode} readOnly={!editMode} />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <label htmlFor=\"mainLink\" className=\"form-label\">MAINLINK</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"mainLink\" value={profile.contacts.mainLink} disabled={!editMode} readOnly={!editMode} />\r\n          </div>\r\n          <div className=\"d-flex justify-content-between mt-3 mb-3\">\r\n            {\r\n              editMode ?\r\n                <button type=\"submit\" className=\"btn btn-success ms-3\">Save changes</button>\r\n                : <div className=\"btn btn-primary\" onClick={handleToggle}>Edit profile</div>\r\n            }\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { getProfile })\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\nexport default connector(Profile)\r\n","import pic from '../../assets/images/avatarHolder.png'\r\nimport { Link } from 'react-router-dom'\r\nimport React from 'react'\r\n\r\ntype PropsType = {\r\n  state: any\r\n  id: number\r\n}\r\n\r\nconst Card: React.FC<PropsType> = ({ id, state }) => {\r\n  return (\r\n    <div className=\"card m-3\" style={{ width: \"14rem\" }}>\r\n      <img\r\n        className=\"card-img-top\"\r\n        src={state.photos.large || pic}\r\n        height=\"222\"\r\n        alt=\"avatar\"\r\n        style={{ fontSize: 0 }}\r\n      />\r\n      <div className=\"card-body h-100 d-flex flex-column justify-content-between\">\r\n        <div className=\"mb-2\">\r\n          <h5 className=\"card-title\">{state.name}</h5>\r\n          <p className=\"card-text\">{state.status || 'Hi! i am React JS Junior developer'}</p>\r\n        </div>\r\n        <Link className=\"btn btn-outline-primary\" to={'/employees/' + id}>More</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","type PropsType = { message: string }\r\n\r\nconst Loader: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center mt-5\">\r\n      <div className=\"spinner-border text-primary\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </div>\r\n      <h5 className=\"text-primary p-1\"><b>{props.message}</b></h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { useState } from 'react';\r\n\r\ntype PropsType = {\r\n  currentPage: number\r\n  pageSize: number\r\n  term: string\r\n  handleSearch: (text: string) => any\r\n}\r\n\r\nconst ListForm: React.FC<PropsType> = (props) => {\r\n  const [term, setTerm] = useState('')\r\n\r\n  const handleReset = () => {\r\n    if (term) {\r\n      setTerm('')\r\n      props.handleSearch('')\r\n    }\r\n  }\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setTerm(event.target.value)\r\n    props.handleSearch(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <form className=\"me-3\" onReset={handleReset}>\r\n      <div className=\"input-group flex-nowrap\">\r\n        <span className=\"input-group-text\" id=\"basic-addon1\">Search</span>\r\n        <input\r\n          name=\"search\"\r\n          className=\"form-control\"\r\n          type=\"search\"\r\n          aria-label=\"Search\"\r\n          placeholder=\"Enter the name\"\r\n          value={term}\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"btn btn-outline-secondary\" type=\"reset\">Reset</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ListForm;\r\n","import React, { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\ntype PropsType = {\r\n  totalCount: number\r\n  currentPage: number\r\n  pageSize: number\r\n  portionSize?: number\r\n  term: string\r\n  handleClick: (event: any) => void\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({ totalCount, pageSize, currentPage, portionSize = 10, term, handleClick }) => {\r\n\r\n  let pageCount = Math.ceil(totalCount / pageSize)\r\n  let pageArray = new Array(pageCount).fill(1).map((el, i) => el + i)\r\n\r\n  let portionCount = Math.ceil(pageCount / 10)\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftLimit = (portionNumber - 1) * portionSize + 1\r\n  let rightLimit = portionNumber * portionSize;\r\n\r\n  const previousPortion = (event: any) => {\r\n    event.stopPropagation()\r\n    if (portionNumber > 1) setPortionNumber(portionNumber - 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPortionNumber(1)\r\n  }, [term])\r\n\r\n  const nextPortion = (event: any) => {\r\n    event.stopPropagation()\r\n    if (portionNumber < portionCount) setPortionNumber(portionNumber + 1)\r\n  }\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination mb-0\" onClick={handleClick}>\r\n        <li className='page-item'><NavLink className=\"page-link\" onClick={previousPortion} to=\"#\">Previous</NavLink></li>\r\n        {pageArray.filter((el) => el >= leftLimit && el <= rightLimit)\r\n          .map((el) => <li key={el} className={currentPage === el ? 'page-item active' : 'page-item'}>\r\n            <NavLink className='page-link' id={el} to=\"#\">{el}</NavLink>\r\n          </li>)}\r\n        <li className=\"page-item\"><NavLink className=\"page-link\" onClick={nextPortion} to=\"#\">Next</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Paginator","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport Card from './Card';\r\nimport Loader from '../Loader';\r\nimport ListForm from './ListForm';\r\nimport Paginator from './Paginator';\r\nimport { getEmployees } from '../../redux/redusers/list-reducer';\r\nimport { RootStateType } from '../../redux/store';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n  employees: state.list.employees,\r\n  inProgress: state.list.inProgress,\r\n  totalUsersCount: state.list.totalUsersCount,\r\n  currentPage: state.list.currentPage,\r\n  pageSize: state.list.pageSize,\r\n  term: state.list.filter.term\r\n});\r\n\r\ntype PropsType = PropsFromRedux & RouteComponentProps\r\n\r\nconst List: React.FC<PropsType> = ({ ...props }) => {\r\n\r\n  useEffect(() => {\r\n    props.getEmployees(1, props.pageSize, '')\r\n  }, [])\r\n\r\n  const handleClick = (event: any) => {\r\n    let id = Number(event.target.id)\r\n    if (id === props.currentPage) return\r\n    props.getEmployees(id, props.pageSize, props.term)\r\n  }\r\n\r\n  let handleSearch = (text: string) => props.getEmployees(1, props.pageSize, text)\r\n\r\n  const debounce = (fn: (...params: any[]) => any, interval: number) => {\r\n    let timer: ReturnType<typeof setTimeout>\r\n    return function (this: any, ...args: any[]) {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(() => fn.apply(this, args), interval)\r\n    }\r\n  }\r\n\r\n  handleSearch = debounce(handleSearch, 300)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-wrap justify-content-between mx-3\">\r\n        <ListForm\r\n          pageSize={props.pageSize}\r\n          currentPage={props.currentPage}\r\n          handleSearch={handleSearch}\r\n          term={props.term}\r\n        />\r\n        <Paginator\r\n          currentPage={props.currentPage}\r\n          totalCount={props.totalUsersCount}\r\n          pageSize={props.pageSize}\r\n          handleClick={handleClick}\r\n          term={props.term}\r\n        />\r\n      </div>\r\n      <hr />\r\n      {props.inProgress ? <Loader message=\"Loading...\" /> :\r\n        props.employees.length !== 0 ?\r\n          (\r\n            <div className=\"d-flex flex-wrap justify-content-start\">\r\n              {props.employees.map((el) => <Card key={el.id} state={el} id={el.id} />)}\r\n            </div>\r\n          ) : (\r\n            <div className=\"d-flex\">\r\n              <span className=\"alert alert-warning ms-3\">Employees not found</span>\r\n            </div>\r\n          )}\r\n\r\n    </>\r\n  )\r\n}\r\nconst connector = connect(mapStateToProps, { getEmployees })\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\nexport default connector(List);","import React, { MouseEvent } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  onOutside: () => void,\r\n  setAuth: (isAuth: boolean) => void\r\n}\r\n\r\nconst DropMenu: React.FC<PropsType> = ({ onOutside, setAuth }) => {\r\n  let wrapperRef: any = null;\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n    return () => document.removeEventListener('mousedown', handleClickOutside)\r\n  }, [])\r\n\r\n  const setWrapperRef = (node: any) => {\r\n    wrapperRef = node;\r\n    console.log(wrapperRef)\r\n  }\r\n\r\n  const handleClickOutside = (event: any) => {\r\n    console.log('outside')\r\n    console.log(event)\r\n    if (wrapperRef && !wrapperRef.contains(event.target)) onOutside()\r\n  }\r\n\r\n  const Logout = (e: MouseEvent<HTMLAnchorElement>) => {\r\n    e.preventDefault()\r\n    onOutside()\r\n    setAuth(false)\r\n  }\r\n\r\n  return (\r\n    <ul\r\n      className=\"dropdown-menu dropdown-menu-dark text-small shadow show\"\r\n      aria-labelledby=\"dropdownUser1\"\r\n      style={{ position: \"absolute\", inset: \"auto auto 0px 0px\", margin: \"0px\", transform: \"translate(0px, -33.65px)\" }}\r\n      data-popper-placement=\"top-start\"\r\n      ref={setWrapperRef}\r\n    >\r\n      <li>\r\n        <Link className=\"dropdown-item\" to=\"#\" onClick={Logout}>Logout</Link>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default DropMenu;","export default __webpack_public_path__ + \"static/media/logo.d024f6dc.svg\";","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport DropMenu from './DropMenu';\r\nimport logo from '../../assets/images/logo.svg';\r\nimport { useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { setAuth } from '../../redux/redusers/common-reducer'\r\nimport { RootStateType } from '../../redux/store';\r\n\r\ntype PropsType = PropsFromRedux\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n  isAuth: state.common.isAuth\r\n})\r\n\r\nconst Nav: React.FC<PropsType> = (props) => {\r\n  const [showDrop, setShowDrop] = useState(false)\r\n\r\n  const handleClick = () => {\r\n    setShowDrop(!showDrop)\r\n  }\r\n\r\n  return (\r\n    <nav className=\"d-flex flex-column justify-content-between h-100 text-white bg-dark\">\r\n      <div>\r\n        <Link\r\n          to=\"/\"\r\n          className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none\"\r\n        >\r\n          <img className=\"bi me-2\" src={logo} width=\"32\" height=\"32\" alt=\"img\" />\r\n          <span className=\"fs-4\"><b>EBase</b></span>\r\n        </Link>\r\n        <hr />\r\n        <ul className=\"nav nav-pills flex-column mb-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/employees\" className=\"nav-link text-white\" aria-current=\"page\" activeClassName=\"active\">\r\n              Employees\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {props.isAuth &&\r\n        <div className=\"dropdown\">\r\n          <hr />\r\n          <Link\r\n            to=\"#\"\r\n            className=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\"\r\n            id=\"dropdownUser1\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded={showDrop}\r\n            onClick={handleClick}>\r\n            <strong>Admin</strong>\r\n          </Link>\r\n          {showDrop ? <DropMenu onOutside={handleClick} setAuth={props.setAuth} /> : null}\r\n        </div>}\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { setAuth })\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\nexport default connector(Nav);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Welcome: React.FC = () => {\r\n  return (\r\n    <div className=\"text-center\" style={{ paddingTop: \"30vh\" }}>\r\n      <h1>Welcome!</h1>\r\n      <h2>Watch information about employees</h2>\r\n      <div className=\"mb-2\">\r\n        Dolor ipsum do voluptate do amet sit ut qui do reprehenderit officia. Reprehenderit do proident velit esse cupidatat exercitation sint in. Ad aliquip culpa magna culpa amet ipsum aliquip. Sunt anim ipsum ipsum dolore nulla id veniam do enim. Eu ea est velit qui fugiat labore ex. Eu Lorem non officia minim anim do aliquip laborum id proident. Irure id magna ad ex qui aliquip et ex.\r\n      </div>\r\n      <div>\r\n        <Link to=\"/employees\" className=\"btn btn-primary btn-lg me-3\"><span className=\"glyphicon glyphicon-home\"></span>\r\n          Show employee's list </Link>\r\n        <Link to=\"/add\" className=\"btn btn-success btn-lg\"><span className=\"glyphicon glyphicon-envelope\"></span>\r\n          Add new employee </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Welcome;","export default __webpack_public_path__ + \"static/media/logo_black.988a0766.svg\";","import React, { FormEvent } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport logo from '../assets/images/logo_black.svg';\r\nimport { RootStateType } from '../redux/store';\r\nimport { setAuth } from '../redux/redusers/common-reducer';\r\nimport { useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n  isAuth: state.common.isAuth\r\n});\r\n\r\ntype PropsType = PropsFromRedux & RouteComponentProps\r\n\r\nconst Login: React.FC<PropsType> = (props) => {\r\n\r\n  const [authData, setAuthData] = useState({ email: '', password: '' })\r\n\r\n  const Login = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    props.setAuth(true)\r\n    props.history.push('/')\r\n  }\r\n\r\n  return (\r\n    <main className=\"text-center\">\r\n      <form onSubmit={Login}>\r\n        <img className=\"mb-4\" src={logo} alt=\"pic\" width=\"72\" height=\"57\" style={{ fontSize: 0 }} />\r\n        <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n\r\n        <div className=\"form-floating\">\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"floatingInput\"\r\n            placeholder=\"name@example.com\"\r\n            value={authData.email}\r\n            onChange={(e) => { setAuthData({ ...authData, email: e.target.value }) }}\r\n          />\r\n          <label htmlFor=\"floatingInput\">Email address</label>\r\n        </div>\r\n        <div className=\"form-floating\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"floatingPassword\"\r\n            placeholder=\"password\"\r\n            value={authData.password}\r\n            onChange={(e) => { setAuthData({ ...authData, password: e.target.value }) }}\r\n          />\r\n          <label htmlFor=\"floatingPassword\">Password</label>\r\n        </div>\r\n\r\n        <div className=\"checkbox mb-3\">\r\n          <label>\r\n            <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n          </label>\r\n        </div>\r\n        <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Sign in</button>\r\n        <p className=\"text-muted\">EBase&copy; 2021</p>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { setAuth })\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\nexport default connector(Login);","import { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Profile from './Profile';\r\nimport List from './List/List';\r\nimport Nav from './Navbar/Nav';\r\nimport NotFound from './NotFound';\r\nimport Welcome from './Welcome';\r\nimport Login from './Login';\r\nimport { RootStateType } from '../redux/store';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n  isAuth: state.common.isAuth\r\n})\r\n\r\nconst App: React.FC<PropsFromRedux> = (props) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap vh-100 overflow-hidden\">\r\n      <aside className=\"d-flex flex-column flex-shrink-0 p-3 text-white bg-dark\" style={{ width: \"280px\" }}>\r\n        <Nav />\r\n      </aside>\r\n      <main className=\"container pt-3\">\r\n        {props.isAuth\r\n          ?\r\n          (<Switch>\r\n            <Route exact path=\"/\" component={Welcome} />\r\n            <Route exact path=\"/employees\" component={List} />\r\n            <Route path=\"/employees/:id\" component={Profile} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>)\r\n          :\r\n          (<Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Redirect to=\"/login\" />\r\n          </Switch>)}\r\n      </main >\r\n    </div >\r\n  )\r\n}\r\n\r\nconst connector = connect(mapStateToProps, {})\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\nexport default connector(App);","import ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport './assets/bootstrap.min.css';\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" component={App} />\r\n      </Switch>\r\n    </Router>\r\n  </Provider>\r\n), document.getElementById('root'));"],"sourceRoot":""}